#!/bin/bash

# run as 'root'

set -e

cd <%= node["kagent"]["keystore_dir"] %>
NODE_FQDN=<%= @fqdn %>

KEYSTORE=<%= node["kagent"]["keystore_dir"] %>/"${NODE_FQDN}"__kstore.jks
TRUSTSTORE=<%= node["kagent"]["keystore_dir"] %>/"${NODE_FQDN}"__tstore.jks

rm -f "${KEYSTORE}"
rm -f "${TRUSTSTORE}"

cd ..
rm -f cert_and_key.p12

if [ -e "hops_intermediate_ca.pem" ] && [ -e "hops_root_ca.pem" ] && [ -e "priv.key" ] && [ -e "pub.pem" ] ; then
	KEYSTOREPW=<%= node["hopsworks"]["master"]["password"] %>

	## 1. Create bundle of private and public key
	openssl pkcs12 -export -in pub.pem -inkey priv.key -out cert_and_key.p12 -name ${NODE_FQDN} -CAfile hops_intermediate_ca.pem -caname intermediate -password pass:$KEYSTOREPW

	## 2. Create keystore and import key-pair
	keytool -importkeystore -destkeystore ${KEYSTORE} -srckeystore cert_and_key.p12 -srcstoretype PKCS12 -alias ${NODE_FQDN} -srcstorepass $KEYSTOREPW -deststorepass $KEYSTOREPW -destkeypass $KEYSTOREPW

	## 3. Create host certificate and intermediate CA bundle
	TMP_BUNDLE=/tmp/"${NODE_FQDN}"_bundle.pem
	cat pub.pem hops_intermediate_ca.pem > "${TMP_BUNDLE}"

	## 4. Import bundle to keystore
	keytool -importcert -noprompt -keystore ${KEYSTORE} -alias ${NODE_FQDN} -file ${TMP_BUNDLE} -storepass ${KEYSTOREPW}
	
	## 5. Create truststore and import Hops Root CA
	keytool -importcert -noprompt -trustcacerts -alias hops_root_ca -file hops_root_ca.pem -keystore ${TRUSTSTORE} -deststorepass ${KEYSTOREPW}

	#
	## TODO What is this????
	cp "${TRUSTSTORE}" <%= node["kagent"]["keystore_dir"] %>/node_client_truststore.jks

	chown <%= node["kagent"]["certs_user"] %>:<%= node["kagent"]["certs_group"] %> <%= node["kagent"]["keystore_dir"] %>/*.jks
	rm -f cert_and_key.p12
	rm -f "${TMP_BUNDLE}"
	
	chmod 640 <%= node["kagent"]["keystore_dir"] %>/*
	chmod 750 <%= node["kagent"]["keystore_dir"] %>
	chmod 640 pub.pem priv.key priv.key.rsa hops_intermediate_ca.pem hops_root_ca.pem
else
  exit 1
fi

