#!/bin/bash

# run as 'root'

set -e

if [ $# -ne 2 ];
then
	echo "Script to construct Java keystores"
	echo "Wrong usage!"
	echo "Usage: ./keystore.sh CRYPTO_DIRECTORY USERNAME [KEYSTORE_PASSWORD]"
	echo "KEYSTORE_PASSWORD is optional as long as the password is exported"
	echo "with the environment variable HOPSIFY_PASSWORD"
	exit 2
fi

if [[ -z "${HOPSIFY_PASSWORD}" ]]; then
    if [[ $# -eq 3 ]]; then
		KEYSTOREPW=$3
    else
	read -s KEYSTOREPW
    fi
else
    KEYSTOREPW=$HOPSIFY_PASSWORD
fi

CRYPTO_DIR=$1
USERNAME=$2
OWNER=<%= node['kagent']['certs_user'] %>
GROUP=<%= node['kagent']['certs_group'] %>

pushd "$CRYPTO_DIR"
NODE_FQDN=<%= @fqdn %>

KEYSTORE="${CRYPTO_DIR}/${USERNAME}__kstore.jks"
TRUSTSTORE="${CRYPTO_DIR}/${USERNAME}__tstore.jks"

PUB="${USERNAME}_pub.pem"
PRIV="${USERNAME}_priv.pem"

test -f "${KEYSTORE}" && mv -f "${KEYSTORE}" "${KEYSTORE}.old"
test -f "${TRUSTSTORE}" && mv -f "${TRUSTSTORE}" "${TRUSTSTORE}.old"

if [ -e "hops_intermediate_ca.pem" ] && [ -e "hops_root_ca.pem" ] && [ -e "${PRIV}" ] && [ -e "${PUB}" ] ; then

	## 1. Create bundle of private and public key
	openssl pkcs12 -export -in "${PUB}" -inkey "${PRIV}" -out cert_and_key.p12 -name ${NODE_FQDN} -CAfile hops_intermediate_ca.pem -caname intermediate -password pass:$KEYSTOREPW

	## 2. Create keystore and import key-pair
	keytool -importkeystore -destkeystore ${KEYSTORE} -srckeystore cert_and_key.p12 -srcstoretype PKCS12 -alias ${NODE_FQDN} -srcstorepass $KEYSTOREPW -deststorepass $KEYSTOREPW -destkeypass $KEYSTOREPW

	## 3. Create host certificate and intermediate CA bundle
	TMP_BUNDLE=/tmp/"${USERNAME}"_bundle.pem
	cat "${PUB}" hops_intermediate_ca.pem > "${TMP_BUNDLE}"

	## 4. Import bundle to keystore
	keytool -importcert -noprompt -keystore ${KEYSTORE} -alias ${NODE_FQDN} -file ${TMP_BUNDLE} -storepass ${KEYSTOREPW}
	
	## 5. Create truststore and import Hops Root CA
	keytool -importcert -noprompt -trustcacerts -alias hops_root_ca -file hops_root_ca.pem -keystore ${TRUSTSTORE} -deststorepass ${KEYSTOREPW}
	
	rm -f cert_and_key.p12
	rm -f "${TMP_BUNDLE}"
	
	chown ${OWNER}:${GROUP} *
	chmod 750 *
	setfacl -m u:${USERNAME}:rx *
	chmod 750 ${CRYPTO_DIR}
else
  exit 1
fi

